############################################################################
# This property file is for the DefaultConfiguration_Test jUnit test
# It must not be included or be included by property file that is not
# directly related to the test.
############################################################################

# Environment Suffix testing purposes
bordertech.config.parameters.useSystemProperties=true
bordertech.config.parameters.useSystemPrefixes=bordertech.config.environment

# Comments should not be picked up as properties.
#test.commentKey=commentValue

# -------------------------------------------------------------------------------------------------
# Simple property tests
# -------------------------------------------------------------------------------------------------
simple.emptyPropertyKey =
simple.stringPropertyKey = simplePropertyValue
simple.intPropertyKey = 123
simple.booleanTruePropertyKey = true
simple.booleanFalsePropertyKey = false
simple.listPropertyKey = item1,item2,item3
simple.propertiesPropertyKey = key1=value1,key2=value2,key3=value3

# -------------------------------------------------------------------------------------------------
# Parameter substitution tests
# -------------------------------------------------------------------------------------------------

# Missing substitution
substitute.missingKey=${substitute.nonExistantKey}

# Single-level substitution
substitute.part1Key=part1Value
substitute.part2Key=part2Value
substitute.part3Key=part3Value
substitute.part1And2Key=${substitute.part1Key}+${substitute.part2Key}

# Multi-level substitution
substitute.part1And2And3Key=${substitute.part1And2Key}+${substitute.part3Key}
# Single-level substitution from other property files
substitute.combinedKey=${substitute.multiPart1Key}${substitute.multiPart2Key}
# Recursive substitution should be detected and stopped
substitute.reurse=${substitute.recurse}
substitute.reurse1=${substitute.recurse2}
substitute.reurse2=${substitute.recurse3}
substitute.reurse3=${substitute.recurse1}

#Substitution before key is defined
substitute.key.not.defined.in.value=${this.key.is.not.defined.initially}

substitute.key.with.profile.in.value=prefix_${bordertech.config.profile}_suffix

# -------------------------------------------------------------------------------------------------
# Environment Suffix tests
# -------------------------------------------------------------------------------------------------
envSuffix.propertyKey=envSuffixPropertyValue
envSuffix.propertyKey.suffix1=envSuffixPropertyValueSuffix1
# -------------------------------------------------------------------------------------------------
# Include tests
# -------------------------------------------------------------------------------------------------
# This property is redefined in the include. The include definition should be effective.
test.definedBeforeInclude=mainValue
include=com/github/bordertech/config/DefaultConfigurationTest_include.properties

# This property is defined in the include but redefined here. This definition should be effective.
test.definedAfterInclude=mainValue

includeAfter.test.path=com/github/bordertech/config

# -------------------------------------------------------------------------------------------------
# IncludeAfter tests 
# -------------------------------------------------------------------------------------------------
# This property is redefined in the includeAfter. The includeAfter definition should be effective.
test.definedBeforeIncludeAfter=mainValue
#includeAfter=${includeAfter.test.path}/DefaultConfigurationTest_includeAfter.properties,${includeAfter.test.path}/DefaultConfigurationTest_includeAfterWithSubstitution.properties
includeAfter=com/github/bordertech/config/DefaultConfigurationTest_includeAfter.properties
# This property is defined in the includeAfter but redefined here. The includeAfter definition should be effective.
test.definedAfterIncludeAfter=mainValue

test.plus.equals += first
test.plus.equals+=second

includeAfter=${includeAfter.test.path}/DefaultConfigurationTest_includeAfterWithSubstitution.properties

# Here for the test to prove that the immediately above includeAfter will override this 
test.includeAfter.secondaryString=anIncludeAfterWillOvverrideThis

include=./path/to/a/non/existent/file.properties
